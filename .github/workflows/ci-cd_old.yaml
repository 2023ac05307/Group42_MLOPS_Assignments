name: MLOps CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, X64]
    env:
      IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/fastapi-be
      APP_PORT: 8000
    steps:
      - name: Checkout
      # v4 recommended
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add github.com to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          
      - name: Docker login (Docker Hub)
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build image
        run: |
          docker build -t "$IMAGE:${{ github.sha }}" .

      - name: Push image
        run: |
          docker push "$IMAGE:${{ github.sha }}"

      # Everything below runs on the same EC2 self-hosted runner (no SSH needed)

      - name: Pull on EC2 runner
        run: docker pull "$IMAGE:${{ github.sha }}"

      - name: Restart container
        run: |
          # stop & remove if exists
          docker rm -f calfornia-housing-api 2>/dev/null || true
          # run new container
          docker run -d --name calfornia-housing-api --restart unless-stopped \
            -p ${APP_PORT}:8000 \
            "$IMAGE:${{ github.sha }}"

      - name: Wait for app to be up
        run: |
          # simple warmup loop
          for i in {1..30}; do
            if curl -fsS "http://localhost:${APP_PORT}/" >/dev/null; then
              echo "Calfornia Housing API is live and running as expected"; break
            fi
            sleep 2
          done

      - name: Print endpoints
        id: urls
        shell: bash
        run: |
          # Try EC2 public IP, fall back to localhost if unavailable
          PUB_IP="$(curl -s --max-time 2 http://169.254.169.254/latest/meta-data/public-ipv4 || true)"
          if [ -z "$PUB_IP" ]; then PUB_IP="localhost"; fi
          BASE="http://${PUB_IP}:${APP_PORT}"
          echo "BASE=$BASE" >> $GITHUB_OUTPUT

          echo "Base:     ${BASE}/"
          echo "Metrics:  ${BASE}/metrics"
          echo "Predict:  ${BASE}/predict"

          {
            echo "## Deployed API Endpoints"
            echo ""
            echo "- **Base**: ${BASE}/"
            echo "- **Metrics**: ${BASE}/metrics"
            echo "- **Predict**: ${BASE}/predict"
          } >> "$GITHUB_STEP_SUMMARY"
